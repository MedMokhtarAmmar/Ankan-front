/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tcGlsZXIvc3JjL3JlbmRlcjMvdmlldy9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBWaWV3RW5jYXBzdWxhdGlvbn0gZnJvbSAnLi4vLi4vY29yZSc7XG5pbXBvcnQge0ludGVycG9sYXRpb25Db25maWd9IGZyb20gJy4uLy4uL21sX3BhcnNlci9pbnRlcnBvbGF0aW9uX2NvbmZpZyc7XG5pbXBvcnQgKiBhcyBvIGZyb20gJy4uLy4uL291dHB1dC9vdXRwdXRfYXN0JztcbmltcG9ydCB7UGFyc2VTb3VyY2VTcGFufSBmcm9tICcuLi8uLi9wYXJzZV91dGlsJztcbmltcG9ydCAqIGFzIHQgZnJvbSAnLi4vcjNfYXN0JztcbmltcG9ydCB7UjNEZXBlbmRlbmN5TWV0YWRhdGF9IGZyb20gJy4uL3IzX2ZhY3RvcnknO1xuaW1wb3J0IHtSM1JlZmVyZW5jZX0gZnJvbSAnLi4vdXRpbCc7XG5cblxuLyoqXG4gKiBJbmZvcm1hdGlvbiBuZWVkZWQgdG8gY29tcGlsZSBhIGRpcmVjdGl2ZSBmb3IgdGhlIHJlbmRlcjMgcnVudGltZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBSM0RpcmVjdGl2ZU1ldGFkYXRhIHtcbiAgLyoqXG4gICAqIE5hbWUgb2YgdGhlIGRpcmVjdGl2ZSB0eXBlLlxuICAgKi9cbiAgbmFtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBbiBleHByZXNzaW9uIHJlcHJlc2VudGluZyBhIHJlZmVyZW5jZSB0byB0aGUgZGlyZWN0aXZlIGl0c2VsZi5cbiAgICovXG4gIHR5cGU6IFIzUmVmZXJlbmNlO1xuXG4gIC8qKlxuICAgKiBBbiBleHByZXNzaW9uIHJlcHJlc2VudGluZyBhIHJlZmVyZW5jZSB0byB0aGUgZGlyZWN0aXZlIGJlaW5nIGNvbXBpbGVkLCBpbnRlbmRlZCBmb3IgdXNlIHdpdGhpblxuICAgKiBhIGNsYXNzIGRlZmluaXRpb24gaXRzZWxmLlxuICAgKlxuICAgKiBUaGlzIGNhbiBkaWZmZXIgZnJvbSB0aGUgb3V0ZXIgYHR5cGVgIGlmIHRoZSBjbGFzcyBpcyBiZWluZyBjb21waWxlZCBieSBuZ2NjIGFuZCBpcyBpbnNpZGVcbiAgICogYW4gSUlGRSBzdHJ1Y3R1cmUgdGhhdCB1c2VzIGEgZGlmZmVyZW50IG5hbWUgaW50ZXJuYWxseS5cbiAgICovXG4gIGludGVybmFsVHlwZTogby5FeHByZXNzaW9uO1xuXG4gIC8qKlxuICAgKiBOdW1iZXIgb2YgZ2VuZXJpYyB0eXBlIHBhcmFtZXRlcnMgb2YgdGhlIHR5cGUgaXRzZWxmLlxuICAgKi9cbiAgdHlwZUFyZ3VtZW50Q291bnQ6IG51bWJlcjtcblxuICAvKipcbiAgICogQSBzb3VyY2Ugc3BhbiBmb3IgdGhlIGRpcmVjdGl2ZSB0eXBlLlxuICAgKi9cbiAgdHlwZVNvdXJjZVNwYW46IFBhcnNlU291cmNlU3BhbjtcblxuICAvKipcbiAgICogRGVwZW5kZW5jaWVzIG9mIHRoZSBkaXJlY3RpdmUncyBjb25zdHJ1Y3Rvci5cbiAgICovXG4gIGRlcHM6IFIzRGVwZW5kZW5jeU1ldGFkYXRhW118J2ludmFsaWQnfG51bGw7XG5cbiAgLyoqXG4gICAqIFVucGFyc2VkIHNlbGVjdG9yIG9mIHRoZSBkaXJlY3RpdmUsIG9yIGBudWxsYCBpZiB0aGVyZSB3YXMgbm8gc2VsZWN0b3IuXG4gICAqL1xuICBzZWxlY3Rvcjogc3RyaW5nfG51bGw7XG5cbiAgLyoqXG4gICAqIEluZm9ybWF0aW9uIGFib3V0IHRoZSBjb250ZW50IHF1ZXJpZXMgbWFkZSBieSB0aGUgZGlyZWN0aXZlLlxuICAgKi9cbiAgcXVlcmllczogUjNRdWVyeU1ldGFkYXRhW107XG5cbiAgLyoqXG4gICAqIEluZm9ybWF0aW9uIGFib3V0IHRoZSB2aWV3IHF1ZXJpZXMgbWFkZSBieSB0aGUgZGlyZWN0aXZlLlxuICAgKi9cbiAgdmlld1F1ZXJpZXM6IFIzUXVlcnlNZXRhZGF0YVtdO1xuXG4gIC8qKlxuICAgKiBNYXBwaW5ncyBpbmRpY2F0aW5nIGhvdyB0aGUgZGlyZWN0aXZlIGludGVyYWN0cyB3aXRoIGl0cyBob3N0IGVsZW1lbnQgKGhvc3QgYmluZGluZ3MsXG4gICAqIGxpc3RlbmVycywgZXRjKS5cbiAgICovXG4gIGhvc3Q6IFIzSG9zdE1ldGFkYXRhO1xuXG4gIC8qKlxuICAgKiBJbmZvcm1hdGlvbiBhYm91dCB1c2FnZSBvZiBzcGVjaWZpYyBsaWZlY3ljbGUgZXZlbnRzIHdoaWNoIHJlcXVpcmUgc3BlY2lhbCB0cmVhdG1lbnQgaW4gdGhlXG4gICAqIGNvZGUgZ2VuZXJhdG9yLlxuICAgKi9cbiAgbGlmZWN5Y2xlOiB7XG4gICAgLyoqXG4gICAgICogV2hldGhlciB0aGUgZGlyZWN0aXZlIHVzZXMgTmdPbkNoYW5nZXMuXG4gICAgICovXG4gICAgdXNlc09uQ2hhbmdlczogYm9vbGVhbjtcbiAgfTtcblxuICAvKipcbiAgICogQSBtYXBwaW5nIG9mIGlucHV0IGZpZWxkIG5hbWVzIHRvIHRoZSBwcm9wZXJ0eSBuYW1lcy5cbiAgICovXG4gIGlucHV0czoge1tmaWVsZDogc3RyaW5nXTogc3RyaW5nIHwgW3N0cmluZywgc3RyaW5nXX07XG5cbiAgLyoqXG4gICAqIEEgbWFwcGluZyBvZiBvdXRwdXQgZmllbGQgbmFtZXMgdG8gdGhlIHByb3BlcnR5IG5hbWVzLlxuICAgKi9cbiAgb3V0cHV0czoge1tmaWVsZDogc3RyaW5nXTogc3RyaW5nfTtcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdGhlIGNvbXBvbmVudCBvciBkaXJlY3RpdmUgaW5oZXJpdHMgZnJvbSBhbm90aGVyIGNsYXNzXG4gICAqL1xuICB1c2VzSW5oZXJpdGFuY2U6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRoZSBjb21wb25lbnQgb3IgZGlyZWN0aXZlIGluaGVyaXRzIGl0cyBlbnRpcmUgZGVjb3JhdG9yIGZyb20gaXRzIGJhc2UgY2xhc3MuXG4gICAqL1xuICBmdWxsSW5oZXJpdGFuY2U6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFJlZmVyZW5jZSBuYW1lIHVuZGVyIHdoaWNoIHRvIGV4cG9ydCB0aGUgZGlyZWN0aXZlJ3MgdHlwZSBpbiBhIHRlbXBsYXRlLFxuICAgKiBpZiBhbnkuXG4gICAqL1xuICBleHBvcnRBczogc3RyaW5nW118bnVsbDtcblxuICAvKipcbiAgICogVGhlIGxpc3Qgb2YgcHJvdmlkZXJzIGRlZmluZWQgaW4gdGhlIGRpcmVjdGl2ZS5cbiAgICovXG4gIHByb3ZpZGVyczogby5FeHByZXNzaW9ufG51bGw7XG59XG5cbi8qKlxuICogSW5mb3JtYXRpb24gbmVlZGVkIHRvIGNvbXBpbGUgYSBjb21wb25lbnQgZm9yIHRoZSByZW5kZXIzIHJ1bnRpbWUuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUjNDb21wb25lbnRNZXRhZGF0YSBleHRlbmRzIFIzRGlyZWN0aXZlTWV0YWRhdGEge1xuICAvKipcbiAgICogSW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbXBvbmVudCdzIHRlbXBsYXRlLlxuICAgKi9cbiAgdGVtcGxhdGU6IHtcbiAgICAvKipcbiAgICAgKiBQYXJzZWQgbm9kZXMgb2YgdGhlIHRlbXBsYXRlLlxuICAgICAqL1xuICAgIG5vZGVzOiB0Lk5vZGVbXTtcbiAgfTtcblxuICAvKipcbiAgICogQSBtYXAgb2YgcGlwZSBuYW1lcyB0byBhbiBleHByZXNzaW9uIHJlZmVyZW5jaW5nIHRoZSBwaXBlIHR5cGUgd2hpY2ggYXJlIGluIHRoZSBzY29wZSBvZiB0aGVcbiAgICogY29tcGlsYXRpb24uXG4gICAqL1xuICBwaXBlczogTWFwPHN0cmluZywgby5FeHByZXNzaW9uPjtcblxuICAvKipcbiAgICogQSBsaXN0IG9mIGRpcmVjdGl2ZSBzZWxlY3RvcnMgYW5kIGFuIGV4cHJlc3Npb24gcmVmZXJlbmNpbmcgdGhlIGRpcmVjdGl2ZSB0eXBlIHdoaWNoIGFyZSBpbiB0aGVcbiAgICogc2NvcGUgb2YgdGhlIGNvbXBpbGF0aW9uLlxuICAgKi9cbiAgZGlyZWN0aXZlczoge3NlbGVjdG9yOiBzdHJpbmcsIGV4cHJlc3Npb246IG8uRXhwcmVzc2lvbn1bXTtcblxuICAvKipcbiAgICogV2hldGhlciB0byB3cmFwIHRoZSAnZGlyZWN0aXZlcycgYW5kL29yIGBwaXBlc2AgYXJyYXksIGlmIG9uZSBpcyBnZW5lcmF0ZWQsIGluIGEgY2xvc3VyZS5cbiAgICpcbiAgICogVGhpcyBpcyBkb25lIHdoZW4gdGhlIGRpcmVjdGl2ZXMgb3IgcGlwZXMgY29udGFpbiBmb3J3YXJkIHJlZmVyZW5jZXMuXG4gICAqL1xuICB3cmFwRGlyZWN0aXZlc0FuZFBpcGVzSW5DbG9zdXJlOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBIGNvbGxlY3Rpb24gb2Ygc3R5bGluZyBkYXRhIHRoYXQgd2lsbCBi